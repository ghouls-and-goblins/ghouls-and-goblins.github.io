{"version":3,"sources":["components/selections/accesibleSelection.jsx","components/footer/footer.jsx","components/header/header.jsx","utils/setRef.js","components/modal/modal.jsx","components/modal/loginModal.jsx","data/nominees.js","components/selections/selectedNominee.jsx","components/modal/spookyScary.jsx","screens/home/home.jsx","screens/results/results.jsx","GhoulsApp.jsx","index.js"],"names":["AccessibleSelector","props","state","focused","this","handleOnClick","monster","selected","monsterId","id","containerClass","className","style","backgroundImage","image","onFocus","setState","onBlur","type","name","onChange","htmlFor","Component","defaultProps","Footer","getEmojiText","spookyScary","onClick","getNameText","values","emoji","link","href","target","injectIntl","Header","getSwapiText","to","src","alt","aria-hidden","setRef","node","inertValue","setAttribute","removeAttribute","Modal","handleEscape","bind","event","keyCode","handleClose","document","addEventListener","removeEventListener","children","inert","role","aria-label","ref","Login","handleLogin","getRandomValue","max","Math","floor","min","ceil","random","NOMINEE_DATA","votes","Selector","SpookyScary","height","width","frameborder","allow","allowfullscreen","Home","selectNominee","e","selections","count","renderNominees","keyboard","map","index","key","getButtonText","isAuthenticated","toggleLoginModal","loginModalVisible","submitData","errorModalVisible","console","log","renderButton","buttonAction","renderModal","werewolfBarMitzVah","location","styles","motionQuery","search","substr","modalVisible","Helmet","defer","rel","media","Results","renderResults","GhoulsApp","exact","path","app","getElementById","ReactDOM","render","locale","messages","Content"],"mappings":"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","file":"static/js/main.6e5d1394.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AccessibleSelector extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfocused: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { handleOnClick, monster, selected } = this.props;\n\t\tconst monsterId = `monster-${monster.id}`;\n\t\tconst containerClass = `ghoul-selector ${selected && \"ghoul-selected\"}`;\n\n\t\tconst handleFocus = () => {\n\t\t\tthis.setState({\n\t\t\t\tfocused: true\n\t\t\t});\n\t\t};\n\n\t\tconst handleBlur = () => {\n\t\t\tthis.setState({\n\t\t\t\tfocused: false\n\t\t\t});\n\t\t};\n\n\t\treturn (\n\t\t\t<div className={`${containerClass} ${this.state.focused && 'ghoul-focused'}`}>\n\t\t\t\t<div className=\"ghoul-checkbox\" style={{ backgroundImage: `url(${monster.image})` }}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonFocus={handleFocus}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tclassName=\"ghoul-checkbox-input\"\n\t\t\t\t\t\tname={monsterId}\n\t\t\t\t\t\tid={monsterId}\n\t\t\t\t\t\tonChange={handleOnClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<label htmlFor={monsterId} className=\"ghoul-name\">\n\t\t\t\t\t{monster.name}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAccessibleSelector.defaultProps = {\n\tselected: false\n};\n\nAccessibleSelector.propTypes = {\n\thandleOnClick: PropTypes.func.isRequired,\n\tmonster: PropTypes.object.isRequired,\n\tselected: PropTypes.bool\n};\n\nexport default AccessibleSelector;\n","import { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Footer extends Component {\n    getEmojiText = () => {\n\t\tconst { spookyScary } = this.props;\n\n\t\treturn (\n\t\t\t<button type=\"button\" className=\"ghouls-emoji\" onClick={ spookyScary }>\n\t\t\t\t🧟\n\t\t\t\t<span className=\"ghouls-accessible-text\"><FormattedMessage id=\"emoji\" /></span>\n\t\t\t</button>\n\t\t);\n\t};\n\n    getNameText = () => <FormattedMessage id=\"theLab\" />;\n\n    render() {\n        return (\n\t\t\t<>\n\t            <footer className=\"ghouls-footer\">\n\t                <p><FormattedMessage id=\"footerDescription\" values={{\n\t                    emoji: this.getEmojiText(),\n\t                    link: <a href=\"https://www.ryandudek.com\" target=\"new\" className=\"ghouls-footer-link\">{ this.getNameText() }</a>\n\t                }} /></p>\n\t            </footer>\n\t\t\t\t<div className=\"grouls-castle-bg\"></div>\n\t\t\t</>\n\t\t);\n    }\n}\n\nFooter.propTypes = {\n\tspookyScary: PropTypes.func.isRequired\n};\n\nexport default injectIntl(Footer);\n","import { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\nimport { Link } from '@reach/router';\n\nclass Header extends Component {\n    getSwapiText = () => <FormattedMessage id=\"swapi\" />;\n\n    render() {\n        return (\n            <header className=\"ghouls-header-container\">\n\t\t\t\t<div className=\"ghouls-header\">\n\t\t\t\t\t<div className=\"ghouls-content\">\n\t\t\t\t\t\t<h1 className=\"ghouls-title ghouls-accessible-text\">\n\t\t\t\t\t\t\t<FormattedMessage id=\"appTitle\" />\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<Link to=\"/\" className=\"ghouls-link\">\n\t\t\t\t\t\t\t<img src=\"/assets/img/tombstone.svg\" className=\"ghouls-logo\" alt=\"\" aria-hidden=\"true\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<p className=\"ghouls-description\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t<FormattedMessage id=\"appHeader\" />\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n        );\n    }\n}\n\nexport default injectIntl(Header);\n","export const setRef = (node, inertValue) => {\n\tif (!node) {\n\t\treturn null;\n\t}\n\n\tif (inertValue) {\n\t\treturn node.setAttribute('inert', '');\n\t}\n\n\treturn node.removeAttribute('inert');\n}\n","import { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef } from '../../utils/setRef';\n\nclass Modal extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleEscape = this.handleEscape.bind(this);\n\t}\n\n\thandleEscape(event){\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.props.handleClose();\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tdocument.addEventListener(\"keydown\", this.handleEscape, false);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tdocument.removeEventListener(\"keydown\", this.handleEscape, false);\n\t}\n\n\trender() {\n\t\tconst { children, handleClose, id, inert } = this.props;\n\n        return (\n\t\t\t<>\n\t\t\t\t<div role=\"button\"\n\t\t\t\t\tclassName=\"ghouls-modal-bg\"\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\taria-label={ <FormattedMessage id=\"closeModal\" /> }\n\t\t\t\t\tonClick={ handleClose }></div>\n\t            <aside className=\"ghouls-modal\" ref={ (node) => setRef(node, inert) } id={ id }>\n\t\t\t\t\t<button className=\"ghouls-modal-close\" onClick={ handleClose }>\n\t\t\t\t\t\t<span className=\"ghouls-accessible-text\">\n\t\t\t\t\t\t\t<FormattedMessage id=\"closeModal\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{ children }\n\t            </aside>\n\t\t\t</>\n        );\n    }\n}\n\nModal.defaultProps = {\n\tchildren: null,\n\tid: '',\n\tinert: false\n};\n\nModal.propTypes = {\n\tchildren: PropTypes.any,\n\thandleClose: PropTypes.func.isRequired,\n\tid: PropTypes.string,\n\tinert: PropTypes.bool\n};\n\nexport default injectIntl(Modal);\n","import { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\nimport Modal from './modal';\nimport PropTypes from 'prop-types';\n\nclass Login extends Component {\n    render() {\n\t\tconst { handleClose, handleLogin, inert } = this.props;\n\n        return (\n            <Modal handleClose={ handleClose } inert={ inert } id=\"ghouls-login-modal\">\n\t\t\t\t<h1 className=\"ghouls-modal-heading\"><FormattedMessage id=\"loginTitle\" /></h1>\n\t\t\t\t<form>\n\t\t\t\t\t<div className=\"ghouls-input-container\">\n\t\t\t\t\t\t<label htmlFor=\"ghouls-vote-login\" className=\"ghouls-label\"><FormattedMessage id=\"loginInput\" /></label>\n\t\t\t\t\t\t<input type=\"email\" id=\"ghouls-vote-login\" name=\"ghouls-vote-login\" className=\"ghouls-input\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ghouls-button-row\">\n\t\t\t\t\t\t<button className=\"ghouls-button\" type=\"button\" onClick={ handleLogin }>\n\t\t\t\t\t\t\t<FormattedMessage id=\"loginAction\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Modal>\n        );\n    }\n}\n\nLogin.defaultProps = {\n\tinert: false\n};\n\nLogin.propTypes = {\n\thandleClose: PropTypes.func.isRequired,\n\thandleLogin: PropTypes.func.isRequired,\n\tinert: PropTypes.bool\n};\n\nexport default injectIntl(Login);\n","const getRandomValue = () => {\n\tconst max = Math.floor(666);\n\tconst min = Math.ceil(99468);\n\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const NOMINEE_DATA = [\n\t{\n        id: 1,\n        image: `/assets/img/frankenstein.jpg`,\n        name: `Frankenstein's Monster`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 2,\n        image: `/assets/img/bride-frankenstein.jpg`,\n        name: `Bride of Frankenstein`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 3,\n        image: `/assets/img/chucky.jpg`,\n        name: `Chucky`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 4,\n        image: `/assets/img/freddy.jpg`,\n        name: `Freddy Krueger`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 5,\n        image: `/assets/img/thing.jpg`,\n        name: `The Thing`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 6,\n        image: `/assets/img/pennywise.jpg`,\n        name: `Pennywise`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 7,\n        image: `/assets/img/dracula.jpg`,\n        name: `Dracula`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 8,\n        image: `/assets/img/creature.jpg`,\n        name: `Creature from the Black Lagoon`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 9,\n        image: `/assets/img/wolfman.jpg`,\n        name: `Wolfman`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 10,\n        image: `/assets/img/blob.jpg`,\n        name: `The Blob`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 11,\n        image: `/assets/img/predator.jpg`,\n        name: `Predator`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 12,\n        image: `/assets/img/pale-man.jpg`,\n        name: `The Pale Man`,\n\t\tvotes: getRandomValue()\n    },\n    {\n        id: 13,\n        image: `/assets/img/xenomorph.jpg`,\n        name: `Xenomorph`,\n\t\tvotes: getRandomValue()\n    }\n];\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Selector extends Component {\n\trender() {\n\t\tconst { handleOnClick, monster, selected } = this.props;\n\t\tconst monsterId = `monster-${monster.id}`;\n\t\tconst containerClass = `ghoul-selector ${selected && \"ghoul-selected\"}`;\n\n\t\treturn (\n\t\t\t<div className={containerClass}>\n\t\t\t\t<div className=\"ghoul-checkbox\" style={{ backgroundImage: `url(${monster.image})` }}>\n\t\t\t\t\t<div className='ghoul-checkbox-input ghoul-checkbox-no-hover' id={monsterId} onChange={handleOnClick}></div>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"ghoul-name\">\n\t\t\t\t\t{monster.name}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSelector.defaultProps = {\n\tselected: false\n};\n\nSelector.propTypes = {\n\thandleOnClick: PropTypes.func.isRequired,\n\tmonster: PropTypes.object.isRequired,\n\tselected: PropTypes.bool\n};\n\nexport default Selector;\n","import { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\nimport Modal from './modal';\nimport PropTypes from 'prop-types';\n\nclass SpookyScary extends Component {\n    render() {\n\t\tconst { handleClose, inert } = this.props;\n\n        return (\n            <Modal handleClose={ handleClose } inert={ inert } id=\"ghouls-login-modal\">\n\t\t\t\t<h1 className=\"ghouls-modal-heading\"><FormattedMessage id=\"spookyScary\" /></h1>\n\t\t\t\t<div style={{ height: '315px' }}>\n\t\t\t\t\t<iframe\n\t\t\t\t\t\twidth=\"560\"\n\t\t\t\t\t\theight=\"315\"\n\t\t\t\t\t\tsrc=\"https://www.youtube.com/embed/A6V2oCX3Hn4\"\n\t\t\t\t\t\tframeborder=\"0\"\n\t\t\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\t\t\tallowfullscreen>\n\t\t\t\t\t</iframe>\n\t\t\t\t</div>\n\t\t\t</Modal>\n        );\n    }\n}\n\nSpookyScary.defaultProps = {\n\tinert: false\n};\n\nSpookyScary.propTypes = {\n\thandleClose: PropTypes.func.isRequired,\n\tinert: PropTypes.bool\n};\n\nexport default injectIntl(SpookyScary);\n","import { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\nimport AccessibleSelector from \"../../components/selections/accesibleSelection\";\nimport Footer from '../../components/footer/footer';\nimport Header from '../../components/header/header';\nimport { Helmet } from 'react-helmet';\nimport LoginModal from '../../components/modal/loginModal';\nimport { NOMINEE_DATA } from '../../data/nominees';\nimport PropTypes from 'prop-types';\nimport Selector from \"../../components/selections/selectedNominee\";\nimport SpookyScary from '../../components/modal/spookyScary';\nimport { setRef } from '../../utils/setRef';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcount: 0,\n\t\t\tisAuthenticated: false,\n\t\t\tselections: [],\n\t\t\tloginModalVisible: false,\n\t\t\terrorModalVisible: false,\n\t\t\twerewolfBarMitzVah: false\n\t\t};\n\t}\n\n\tselectNominee = (monsterId,e) => {\n\t\tconst { selections, count } = this.state;\n\n\t\tif (count >= 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcount: count + 1,\n\t\t\tselections: [...selections, monsterId]\n\t\t});\n\t};\n\n\trenderNominees = () => {\n\t\tconst { keyboard } = this.props;\n\n\t\treturn (\n\t\t\t<ul className=\"ghouls-nominee-list\">\n\t\t\t\t{ NOMINEE_DATA.map((monster, index) => {\n\t\t\t\t\tconst monsterId = monster.id;\n\n\t\t\t\t\tif (keyboard) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<AccessibleSelector\n\t\t\t\t\t\t\t\tmonster={monster}\n\t\t\t\t\t\t\t\tkey={`monster-${monsterId}`}\n\t\t\t\t\t\t\t\thandleOnClick={() =>\n\t\t\t\t\t\t\t\t\tthis.selectNominee(monsterId)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Selector\n\t\t\t\t\t\t\tmonster={monster}\n\t\t\t\t\t\t\tkey={`monster-${monsterId}`}\n\t\t\t\t\t\t\thandleOnClick={() =>\n\t\t\t\t\t\t\t\tthis.selectNominee(monsterId)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}) }\n\t\t\t</ul>\n\t\t);\n\t};\n\n    getButtonText = () => {\n        const { isAuthenticated } = this.state;\n\n        if (isAuthenticated) {\n            return <FormattedMessage id=\"submitVotes\" />;\n        }\n\n        return <FormattedMessage id=\"logIn\" />;\n    }\n\n    toggleLoginModal = () => {\n        const { loginModalVisible } = this.state;\n\n        this.setState({ loginModalVisible: !loginModalVisible });\n    }\n\n\thandleLogin = () => {\n        const { isAuthenticated } = this.state;\n\n\t\tthis.setState({\n\t\t\tisAuthenticated: !isAuthenticated,\n\t\t\tloginModalVisible: false\n\t\t});\n\t}\n\n    submitData = () => {\n        const { selections, errorModalVisible } = this.state;\n        console.log(selections, errorModalVisible);\n\n        // if (selections.length) {\n        //     return this.props.push('/results');\n        // }\n        //\n        // this.setState({ errorModalVisible: !errorModalVisible });\n    }\n\n    renderButton = () => {\n        const { isAuthenticated } = this.state;\n        const buttonAction = isAuthenticated ? this.submitData : this.toggleLoginModal;\n\n        return (\n            <div className=\"ghouls-button-row\">\n                <button\n                    type=\"button\"\n                    className=\"ghouls-button\"\n                    onClick={ buttonAction }>\n                    { this.getButtonText() }\n                </button>\n            </div>\n        );\n    }\n\n\trenderModal = () => {\n\t\tconst { errorModalVisible, werewolfBarMitzVah } = this.state;\n\n\t\tif (errorModalVisible) {\n\t\t\tconsole.log('there is an error');\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (werewolfBarMitzVah) {\n\t\t\treturn <SpookyScary handleClose={ this.werewolfBarMitzVah } />;\n\t\t}\n\n\t\treturn (\n\t\t\t<LoginModal handleClose={ this.toggleLoginModal } handleLogin={ this.handleLogin } />\n\t\t);\n\t}\n\n\twerewolfBarMitzVah = () => {\n\t\tconst { werewolfBarMitzVah } = this.state;\n\n\t\tthis.setState({ werewolfBarMitzVah: !werewolfBarMitzVah });\n\t}\n\n\trender() {\n\t\tconst { errorModalVisible, loginModalVisible, werewolfBarMitzVah } = this.state;\n\t\tconst { keyboard, inert, location, styles } = this.props;\n\t\tconst motionQuery = location.search && location.search.substr(1, 14);\n\t\tconst modalVisible = errorModalVisible || loginModalVisible || werewolfBarMitzVah;\n\t\tconst inertValue = inert ? modalVisible : false;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Helmet defer={ false }>\n\t\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href={ `/${styles}.css` } />\n\t\t\t\t\t{ motionQuery === 'reduced-motion' && <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/ghouls--reduced-motion.css\" /> }\n\t\t\t\t\t{ inert && <script src=\"/inert-polyfill.min.js\" /> }\n\t\t\t\t</Helmet>\n\n\t\t\t\t<main ref={(node) => setRef(node, inertValue)} className=\"ghouls-main\" id=\"ghouls-main\">\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<section className=\"ghouls-content ghouls-body-content\">\n\t\t\t\t\t\t<div className=\"ghouls-selections\">\n\t\t\t\t\t\t\t{/* this.renderSelections() */}\n\t\t\t\t\t\t\t{this.renderButton()}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h2 className=\"ghouls-heading\">\n\t\t\t\t\t\t\t<FormattedMessage id=\"homeTitle\" />\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t{this.renderNominees()}\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<Footer spookyScary={ this.werewolfBarMitzVah }  />\n\t            </main>\n\t\t\t\t{ modalVisible && this.renderModal() }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nHome.defaultProps = {\n\tinert: false,\n\tkeyboard: false\n};\n\nHome.propTypes = {\n\tinert: PropTypes.bool,\n\tkeyboard: PropTypes.bool,\n\tlocation: PropTypes.object.isRequired,\n\tstyles: PropTypes.string.isRequired\n};\n\nexport default injectIntl(Home);\n","import { FormattedMessage, injectIntl } from 'react-intl';\nimport React, { Component } from 'react';\nimport Footer from '../../components/footer/footer';\nimport Header from '../../components/header/header';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { NOMINEE_DATA } from '../../data/nominees'\n\nclass Results extends Component {\n\trenderResults = () => {\n\t\tconsole.log(NOMINEE_DATA);\n\t}\n\n    render() {\n\t\tconst { location, styles } = this.props;\n\t\tconst motionQuery = (location.search && location.search.substr(1, 14));\n\n        return (\n\t\t\t<>\n\t\t\t\t<main>\n\t\t\t\t\t<Helmet defer={ false }>\n\t\t\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href={ `/${styles}.css` } />\n\t\t\t\t\t\t{ motionQuery === 'reduced-motion' && <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/ghouls--reduced-motion.css\" /> }\n\t\t\t\t\t</Helmet>\n\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<section className=\"ghouls-content\">\n\t\t\t\t\t\t<h2 className=\"ghouls-heading\"><FormattedMessage id=\"resultsTitle\" /></h2>\n\t\t\t\t\t\t{ this.renderResults() }\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<Footer />\n\t            </main>\n\t\t\t</>\n        );\n    }\n}\n\nResults.propTypes = {\n\tlocation: PropTypes.object.isRequired,\n\tstyles: PropTypes.string.isRequired\n};\n\nexport default injectIntl(Results);\n","import React, { Component } from 'react';\nimport { Router } from '@reach/router';\nimport Home from './screens/home/home';\nimport Results from './screens/results/results';\n\nclass GhoulsApp extends Component {\n    render() {\n        return (\n            <div className=\"ghouls-app\">\n                <Router>\n                    <Home exact path=\"/\" styles=\"ghouls--1\" />\n                    <Home path=\"/home\" styles=\"ghouls--1\" />\n                    <Home path=\"/contrast\" styles=\"ghouls--contrast\" />\n\t\t\t\t\t<Home path=\"/keyboard\" styles=\"ghouls--keyboard\" keyboard />\n\t\t\t\t\t<Home path=\"/inert\" styles=\"ghouls--keyboard\" keyboard inert />\n\t\t\t\t\t<Home path=\"/dark\" styles=\"ghouls--dark\" keyboard inert />\n\t\t\t\t\t<Home path=\"/high-contrast\" styles=\"ghouls--high-contrast-dark\" keyboard inert />\n                    <Home path=\"/high-contrast-light\" styles=\"ghouls--high-contrast-light\" keyboard inert />\n\n\t\t\t\t\t<Results path=\"/results\" styles=\"ghouls--keyboard\" keyboard inert />\n\t\t\t\t\t<Results path=\"/results-dark\" styles=\"ghouls--dark\" keyboard inert />\n\t\t\t\t\t<Results path=\"/results-high-contrast\" styles=\"ghouls--high-contrast-dark\" keyboard inert />\n\t\t\t\t\t<Results path=\"/results-high-contrast-light\" styles=\"ghouls--high-contrast-light\" keyboard inert />\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default GhoulsApp;\n","import Content from './content/en.json';\nimport { IntlProvider } from 'react-intl';\nimport GhoulsApp from './GhoulsApp';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst app = document.getElementById('ghouls-goblins-hof');\n\nif (app) {\n    ReactDOM.render(\n        <IntlProvider\n            locale=\"en\"\n            messages={ Content }\n        >\n            <GhoulsApp />\n        </IntlProvider>\n    , app);\n}\n"],"sourceRoot":""}